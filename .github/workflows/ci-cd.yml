name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}
      POSTGRES_URL_NON_POOLING: ${{ secrets.POSTGRES_URL_NON_POOLING }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Cache pnpm modules
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Check Environment Variables
      run: |
        required_vars=("POSTGRES_PRISMA_URL" "POSTGRES_URL_NON_POOLING" "VERCEL_TOKEN" "VERCEL_PROJECT_ID" "VERCEL_ORG_ID")
        for var in "${required_vars[@]}"; do
          if [ -z "${!var}" ]; then
            echo "Error: $var is not set or is empty"
            exit 1
          else
            echo "$var is set and not empty"
          fi
        done

    - name: Install dependencies
      run: pnpm install --frozen-lockfile
  

    - name: Generate Prisma Client
      run: pnpm exec prisma generate
      if: success()

    - name: Lint
      run: pnpm run lint
      if: success()

    - name: Run tests
      run: pnpm test
      if: success()

    - name: Deploy database changes
      run: pnpm exec prisma migrate deploy
      if: success()

    - name: Build
      run: pnpm run build
      if: success()

    - name: Deploy to Vercel
      run: pnpm dlx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
      if: success()